@model ERP_Mensajeria.Models.Recepcion

@{
    ViewBag.Title = "Editar recepción";
}
@if (!Request.IsAuthenticated)
{
    Response.Redirect(@Url.Action("Login", "Account"));
}
else
{

    <div class="container-fluid mt-5">
        <div class="card mb-4 wow fadeIn">
            <div class="card-body d-sm-flex justify-content-between">
                <h4 class="mb-2 mb-sm-0 pt-1">
                    <span><a href="@Url.Action("Index", "Home")">Inicio</a></span>
                    <span>/</span>
                    <span><a href="@Url.Action("Index", "Recepciones")">Recepciones</a></span>
                    <span>/</span>
                    <span>Editar recepción</span>
                </h4>
            </div>
        </div>

        <div class="card mb-4 wow fadeIn">
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Recepcion existente</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID_Recepcion)

                        <div class="form-group">
                            @Html.LabelFor(model => model.ID_Contacto, "Contacto", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ID_Contacto", null, htmlAttributes: new { @class = "md-form mdb-select" })
                                @Html.ValidationMessageFor(model => model.ID_Contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ID_Proveedor, "Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ID_Proveedor", null, htmlAttributes: new { @class = "md-form mdb-select" })
                                @Html.ValidationMessageFor(model => model.ID_Proveedor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.Tipo, new SelectList(new List<Object>{
                                    new { value = "Entrada" , text = "Entrada"  },
                                    new { value = "Salida" , text = "Salida" }},
                                    "value", "text", 2), new { @class = "mdb-select md-form" })
                                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group text-right">
                            <div class="col-md-offset-2 col-md-10">
                                <a class="btn btn-primary" href="@Url.Action("Index", "Recepciones")"><i class="fa fa-arrow-left mr-1"></i> Regresar</a>
                                |
                                <button type="submit" class="btn btn-default"><i class="fa fa-save ml-1"></i> Guardar </button>
                            </div>
                        </div>
                    </div>
                }

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
            </div>
        </div>
    </div>
}